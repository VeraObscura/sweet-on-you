/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Artex_112 (https://sketchfab.com/Artex_112)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/strawberry-cake-863b112d64fc4a01a9eaeccc1c0b3e6f
title: Strawberry Cake
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { forwardRef } from "react";

export declare type ObjectMapCustom = {
  nodes: {
    [name: string]: any;
  };
  materials: {
    [name: string]: THREE.Material;
  };
};

type GLTFResult = GLTF & ObjectMapCustom;

export const Model = forwardRef(function Cake(props: any, forwardRef: any) {
  const { nodes, materials } = useGLTF("/scene.gltf") as any;
  return (
    <group ref={forwardRef} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group scale={[1, 0.47, 1]}>
            <mesh
              geometry={nodes.Object_4.geometry}
              material={materials["Material.001"]}
            />
            <mesh
              geometry={nodes.Object_5.geometry}
              material={materials["Material.005"]}
            />
          </group>
        </group>
      </group>
    </group>
  );
});

useGLTF.preload("/scene.gltf");
